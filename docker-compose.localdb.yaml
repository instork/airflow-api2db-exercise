# Reference: https://github.com/K9Ns/data-pipelines-with-apache-airflow/blob/main/chapter08/docker-compose.yml
# docker-copmose version
# https://docs.docker.com/compose/compose-file/

# docker compose spec
# https://github.com/compose-spec/compose-spec/blob/master/spec.md
# https://github.com/compose-spec/compose-spec/blob/master/spec.md#extension
# https://github.com/compose-spec/compose-spec/blob/master/spec.md#fragments


version: '3.7'
# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-environment: &airflow_environment
  # Airflow settings.
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=False
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  - AIRFLOW__WEBSERVER__RBAC=False
  # - AIRFLOW__CORE__DEFAULT_TIMEZONE=Asia/Seoul
x-airflow-image: &airflow_image apache/airflow:2.3.3-python3.8
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================

services:
  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
  
  init:
    build:
      context: ./docker/airflow-data
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: instork/airflow-data
    depends_on:
      - postgres
    environment: *airflow_environment
    entrypoint: /bin/bash
    env_file:
      - airflow.env
    command: -c "airflow db upgrade && sleep 5 && airflow users create --username $$AIRFLOW_USER --password $$AIRFLOW_PWD --firstname Anonymous --lastname Admin --role Admin --email admin@example.org"
  
  webserver:
    build:
      context: ./docker/airflow-data
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: instork/airflow-data
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - logs:/opt/airflow/logs
    environment: *airflow_environment
    command: webserver

  scheduler:
    build:
      context: ./docker/airflow-pymongo
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: instork/airflow-pymongo
    restart: always
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - data:/data
      - logs:/opt/airflow/logs
    environment: *airflow_environment
    command: scheduler
    extra_hosts:
      - 'mongoservice:172.17.0.1'

volumes:
  data:
  logs: